@using System.Globalization;
@using System.Threading;

@model IEnumerable<CRIMAS.Models.Customer>
@{
    ViewBag.Title = "Customer List";
    Layout = "~/Views/Shared/_CashierLayoutPageWithCommonTasks.cshtml";

    var db = new CRIMAS.Models.CrimasDb();
    var searchString = ViewBag.searchString;

    var message = Convert.ToString(ViewBag.Message);
    var messageType = Convert.ToString(ViewBag.MessageType);
    var msgColor = messageType == "Success" ? "green" : "red";

    //Set Culture info for currency
    CultureInfo cultureInfo = new CultureInfo("en-US");
    cultureInfo.NumberFormat.CurrencySymbol = "₦";

    Thread.CurrentThread.CurrentCulture = cultureInfo;


    decimal encumbered = 0;
    decimal outstanding_totalInterest = 0;
    decimal outstanding_totalPrincipalPlusInterest = 0;

    decimal finished_totalInterest = 0;
    decimal finished_totalPrincipalPlusInterest = 0;

}

<div style="width:70%; margin-left:auto; margin-right:auto; padding-top:4em;">
    @if (Model.Count() == 0)
    {
        <div class="card-panel" style="width:70%; margin-left:auto; margin-right:auto; ">
            <p style="padding-bottom:30px;">
                <b>Your search yielded @Model.Count() result(s)</b>
                <span style="float:right; margin-right:20px;"><a href="~/Home/Cashier" class="btn btn-info"><img src="~/Images/Home.png" />&nbsp;&nbsp;Take me home</a></span>
            </p>
        </div>
    }
    <!--Check if there are more than one customer with thesame ID-->
    @if (Model.Count() > 1)
    {
        <div class="card-panel" style="width:70%; margin-left:auto; margin-right:auto; ">
            <p style="padding-bottom:30px;">
                <b>Your search yielded @Model.Count() result(s). Please Enter a specific customer account number</b><br />
                <br /><span style="float:right; "><a href="~/Home/Cashier" class="btn btn-info"><img src="~/Images/Home.png" />&nbsp;&nbsp;Take me home</a></span>
            </p>
        </div>
    }
    else
    {
        foreach (var item in Model)
        {
            var customerLoan = db.Loans.Where(x => x.AccountNo == item.AccountNo || x.Customername.Contains(item.Name)).Where(x => x.LoanStatus == "active").ToList();
            encumbered = customerLoan.Select(x => x.amount).Sum() * 0.1m;

            var finishedLoan = db.Loans.Where(x => x.AccountNo == item.AccountNo || x.Customername.Contains(item.Name)).Where(x => x.LoanStatus == "completed").ToList();

            var savingsCredit = 0m;
            var savingsDebit = 0m;
            if (db.CustomerSavings.Count() != 0)
            {
                savingsCredit = db.CustomerSavings.Where(x => x.AccountNo == @item.AccountNo || x.Name.Contains(@item.Name)).Select(x => x.Credit).DefaultIfEmpty().Sum();
                savingsDebit = db.CustomerSavings.Where(x => x.AccountNo == @item.AccountNo || x.Name.Contains(@item.Name)).Select(x => x.Debit).DefaultIfEmpty().Sum();
            }
            var savingsBalance = savingsCredit - savingsDebit;
            //var imageUrl = string.IsNullOrEmpty("/Customer/RetrieveImage/@item.CustomerId") ? "/images/user-48.png" : item.ImageUrl;

            if (!string.IsNullOrEmpty(message))
            {
                <span style="color:@msgColor; text-align:center;display: block;">
                    @Html.Raw(message)
                </span>
            }

            <div style="  border-radius:0; ">

                <span style="font-size:16pt;">
                    <a href="~/Home/cashier" style="float:right;margin-right:25px; font-size:10pt;" class="btn btn-floating  waves-effect waves-light blue"><img src="~/Images/Home.png" /></a>


                    @if (item.image != null)
                    {
                    <img id="ProfileImage" name="file" class="circle responsive-img valign" src="~/Customer/RetrieveImage/@item.CustomerId" /> @Html.DisplayFor(modelItem => item.Name)<hr />

                    }
                    else
                    {
                    <img id="ProfileImage" name="file" class="circle responsive-img valign" src="~/images/user-48.png" /> @Html.DisplayFor(modelItem => item.Name)<hr />

                    }


                </span>
                <p>
                    <span style="font-size:15pt; ">
                        <strong>
                            Account No.: @Html.DisplayFor(modelItem => item.AccountNo)
                        </strong>
                    </span>
                    <span style="float:right">
                        Account opening date: <i> @DateTime.Parse(@item.DateCreated.ToString()).ToLongDateString()</i><br /><br />
                    </span>
                    @*    @Html.DisplayFor(modelItem => item.OfficeAddress)*@
                </p>

            </div>


            //account Summary
            <div class="card">
                <div class="card-content">
                    <h5>
                        <img src="~/Images/Coin-01-WF.png" />Savings Summary
                        <a style="float:right" class="btn btn-primary" href="~/CustomerSavings/CheckAccount?accountno=@item.AccountNo">view account status</a>
                    </h5><hr /><br />


                    <table class="table bordered striped">
                        <tr>
                            <td>Total Regular Savings to Date:</td>
                            <td><b style="color:blue">@string.Format("{0:C}", @savingsBalance)</b></td>
                        </tr>
                        <tr>
                            <td>Encumbered savings:</td>
                            <td><b style="color:blue">@string.Format("{0:C}", encumbered)</b></td>
                        </tr>
                        <tr>
                            <td><b>Balance:</b></td>
                            <td><b style="color:blue">@string.Format("{0:C}", @savingsBalance - encumbered)</b></td>
                        </tr>
                    </table>


                </div>
            </div>

            //Loans
            <div class="card">
                <div class="card-content">
                    <h5>
                        <img src="~/Images/loan-agr.png" /> Outstanding loans
                        <a style="float:right" class="btn btn-primary" href="~/LoanTransaction/create?accountno=@item.AccountNo">Amortization</a>
                    </h5><hr /><br />
                    <table class="table bordered striped" style="font-size:10pt;">
                        <tr style="background-color:#0078d7; color:white;">
                            <td>Date Issued</td>
                            <td>Principal + Interest</td>
                            <td>Interest</td>
                            <td>Total Paid</td>
                            <td>Outstanding</td>
                            <td>Encumbered</td>
                            <td>Loan Statement</td>
                        </tr>

                        @foreach (var record in customerLoan)
                        {

                        <tr>
                            <td>@record.DateCreated.ToLongDateString()</td>
                            <td>
                                @{
                                        var pricipal_interest = record.amount + (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration));
                                }
                                @string.Format("{0:C}", pricipal_interest)
                            </td>
                            <td>
                                @string.Format("{0:C}",
                                                         (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration)))

                            </td>
                            <td>
                                @{
                                        var transactions = db.LoanTransactions.Where(x => x.Loan.Id == record.Id).ToList();

                                        var total_paid = Convert.ToDecimal(transactions.Select(x => x.Dr).Sum());


                                }
                                @string.Format("{0:C}", total_paid)


                            </td>
                            <td>
                                @{
                                        var outstanding = pricipal_interest - total_paid;
                                }
                                @string.Format("{0:C}", outstanding)
                            </td>

                            <td>
                                @string.Format("{0:C}", (record.amount * 0.1m))
                            </td>
                            <td>
                                <a href="~/Loan/statement?loanId=@record.Id">View Statement </a>

                            </td>
                        </tr>
                                            outstanding_totalInterest = outstanding_totalInterest + (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration));
                                            outstanding_totalPrincipalPlusInterest = outstanding_totalPrincipalPlusInterest + record.amount + (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration));
                                        }
                        <tr>
                            <td><b>Total:</b></td>
                            <td>
                                <b>@string.Format("{0:C}", outstanding_totalPrincipalPlusInterest)</b>
                            </td>
                            <td>
                                <b>@string.Format("{0:C}", @outstanding_totalInterest)</b>
                            </td>
                            <td></td>
                            <td></td>
                            <td>
                                <b>@string.Format("{0:C}", encumbered)</b>
                            </td>
                            <td></td>
                        </tr>
                    </table>

                </div>
            </div>

                                    //finished loans
                                    <ul class="card collapsible" data-collapsible="accordion">
                                        <li>
                                            <div class="collapsible-header">
                                                <span style="float:right; padding-right:2em;">
                                                    <b> Finished loans </b>
                                                </span>
                                                <i class="material-icons">restore</i>

                                            </div>
                                            <div class="collapsible-body card-content">
                                                <div>
                                                    <div class="card-content">

                                                        <table class="table bordered striped" style="font-size:10pt;">
                                                            <tr style="background-color:gray; color:white;">
                                                                <td>Date Issued</td>
                                                                <td>Principal + Interest</td>
                                                                <td>Interest</td>
                                                                <td>Total Paid</td>
                                                                <td>Outstanding</td>
                                                                <td>Encumbered</td>
                                                                <td>Loan Statement</td>
                                                            </tr>

                                                            @foreach (var record in finishedLoan)
                                                                {

                                                                <tr>
                                                                    <td>@record.DateCreated.ToLongDateString()</td>
                                                                    <td>
                                                                        @string.Format("{0:C}",
                                                          record.amount + (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration)))
                                                                    </td>
                                                                    <td>
                                                                        @string.Format("{0:C}",
                                                         (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration)))

                                                                    </td>
                                                                    <td>
                                                                        @*  @record.LoanTransactions.Select(x => x.refund).FirstOrDefault();*@
                                                                    </td>
                                                                    <td></td>
                                                                    <td>
                                                                        @string.Format("{0:C}", (record.amount * 0.1m))
                                                                    </td>
                                                                    <td>
                                                                        <a href="~/Loan/statement?loanId=@record.Id">View Statement </a>

                                                                    </td>
                                                                </tr>
                                                                    finished_totalInterest = finished_totalInterest + (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration));
                                                                    finished_totalPrincipalPlusInterest = finished_totalPrincipalPlusInterest + record.amount + (record.amount * (record.InterestRate / 100) * Convert.ToDecimal(record.Duration));
                                                                }
                                                            <tr>
                                                                <td><b>Total:</b></td>
                                                                <td>
                                                                    <b>@string.Format("{0:C}", finished_totalPrincipalPlusInterest)</b>
                                                                </td>
                                                                <td>
                                                                    <b>@string.Format("{0:C}", @finished_totalInterest)</b>
                                                                </td>
                                                                <td></td>
                                                                <td></td>
                                                                <td>
                                                                    <b>@string.Format("{0:C}", encumbered)</b>
                                                                </td>
                                                                <td></td>
                                                            </tr>
                                                        </table>

                                                    </div>
                                                </div>
                                            </div>
                                        </li>
                                    </ul>

                                    //Customer personal details
                                    <ul class="card collapsible" data-collapsible="accordion">
                                        <li>
                                            <div class="collapsible-header">
                                                <span style=" float:right; padding-right:2em;"><b>Customer personal details</b> </span>
                                                <i class="material-icons">perm_identity</i>
                                            </div>
                                            <div class="collapsible-body card-content">
                                                <table class="table striped" style="font-size:10pt;">

                                                    <tr>
                                                        <td><b>Employer</b></td>
                                                        <td style="float:right; padding-right:20px;">@Html.DisplayFor(modelItem => item.employer)</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Office Address</b></td>
                                                        <td style="float:right; padding-right:20px;">@Html.DisplayFor(modelItem => item.OfficeAddress)</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Residence</b></td>
                                                        <td style="float:right; padding-right:20px;">@Html.DisplayFor(modelItem => item.ResidentialAddress)</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>Next of Kin</b></td>
                                                        <td style="float:right; padding-right:20px;">@Html.DisplayFor(modelItem => item.NextOfkin)</td>
                                                    </tr>
                                                    <tr>
                                                        <td><b>State of origin</b></td>
                                                        <td style="float:right; padding-right:20px;">@Html.DisplayFor(modelItem => item.StateOfOrigin)</td>
                                                    </tr>
                                                    <tr>
                                                        <td>&nbsp;</td>
                                                        <td style="float:right; padding-right:20px;">
                                                            <button data-target="modal1" class="btn btn-flat modal-edit">Edit</button>
                                                        </td>

                                                    </tr>
                                                </table>
                                            </div>

                                        </li>
                                    </ul>

                                    //Image Upload
                                    <ul class="card collapsible" data-collapsible="accordion">
                                        <li style="text-align:center">
                                            <div class="collapsible-header">
                                                <span style="float:right;padding-right:2em;">
                                                    <b> Update customer profile image </b>
                                                </span>
                                                <i class="material-icons">filter_drama</i>

                                            </div>
                                            <div class="collapsible-body" style="width:60%; margin-left:auto; margin-right:auto; padding-bottom:3em;">
                                                <br />
                                                @using (Html.BeginForm("UploadImage", "Customer", new { customerId = item.CustomerId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                                        {

                                                    <div class="input-field col s9">
                                                        <div class="file-field input-field">
                                                            <div class="btn">
                                                                <span>+</span>
                                                                <input type="file" name="file" id="file">
                                                            </div>
                                                            <div class="file-path-wrapper">
                                                                <input class="file-path validate" type="text" placeholder="  select customer profile image">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s12" style="padding-bottom:3em;">
                                                        <div class="file-field input-field">
                                                            <input style="width:100%" type="submit" class="btn btn-primary" value="Update Image" />
                                                        </div>
                                                    </div>
                                        }
                                            </div>
                                        </li>
                                    </ul>

                                    //modal
                                        <!-- Modal Structure -->
                                    <div id="modal1" class="modal" style="height:80%">
                                        <form name="update-customer" method="post" action="~/Customer/Edit">

                                            <div class="modal-content">
                                                <h4 style="font-size:13pt;">Update Customer Details</h4><hr />
                                                <div class="row">

                                                    <input type="hidden" value="@item.CustomerId" name="CustomerId" />

                                                    <div class="input-field col s12">
                                                        <label><b>Account No</b></label><br />

                                                        <input type="text" name="AccountNo" placeholder="Account no" id="AccountNo" required="required" value="@item.AccountNo" />
                                                    </div>

                                                    <div class="input-field col s12">
                                                        <label><b>Name</b></label><br />

                                                        <input type="text" name="Name" placeholder="Full name" id="Name" required="required" value="@item.Name" />
                                                    </div>

                                                    <div class="input-field col s12">
                                                        <label><b>Next of Kin</b></label><br />
                                                        <input type="text" name="NextOfkin" placeholder="Next of Kin" required="required" value="@item.NextOfkin" />
                                                    </div>

                                                    <div class="input-field col s12">
                                                        <label><b>Employer</b></label><br />

                                                        <input type="text" name="employer" placeholder="Employer name" required="required" value="@item.employer" />
                                                    </div>
                                                    <div class="input-field col s12">
                                                        <label><b>Office Address</b></label><br />

                                                        <input type="text" name="OfficeAddress" placeholder="Office Address" required="required" value="@item.OfficeAddress" />
                                                    </div>
                                                    <div class="input-field col s12">
                                                        <label><b>Residential Address</b></label><br />

                                                        <input type="text" name="ResidentialAddress" placeholder="Residential Address" required="required" value="@item.ResidentialAddress" />

                                                    </div>

                                                    <div class="input-field col s12 ">
                                                        <label><b>Phone <i>e.g. 234XXXXXXXXX</i></b></label><br />

                                                        <input type="text" name="phone" placeholder="Phone number" required="required" value="@item.phone" />

                                                    </div>
                                                    <div class="input-field col s12 ">
                                                        <label><b>Email</b></label><br />

                                                        <input type="text" name="Email" placeholder="email address" required="required" value="@item.Email" />

                                                    </div>
                                                    <div class="input-field col s12">
                                                        <label><b>State of Origin</b></label><br />

                                                        <input type="text" name="StateOfOrigin" placeholder="State of Origin" required="required" value="@item.StateOfOrigin" />

                                                    </div>
                                                </div>

                                            </div>
                                            <div class="modal-footer">
                                                <button type="submit" class="btn  waves-effect waves-green btn-flat">Update record</button>
                                            </div>
                                        </form>

                                    </div>
                                        }
                                    }

</div>


<style>
    .file-path-wrapper .file-path {
        box-sizing: border-box;
    }

    .file-field .btn, .file-field .btn-large {
        margin-top: 5px;
    }

    .card input[type="text"], .card input[type="number"], .card input[type="email"], .card input[type="password"], .card select {
        box-sizing: border-box;
    }

    #ProfileImage {
        height: 48px;
        vertical-align: -12px;
        width: 48px;
    }

    .collapsible-header, .collapsible-body {
        border-bottom: none !important;
    }

    .modal input {
        padding-left: 10px;
        padding-right: 10px;
        height: 50px;
        /*margin-bottom:2px;
        width:80%;*/
        /*margin-left:auto;
        margin-right:auto;*/
    }

    .modal {
        display: none;
        position: fixed;
        left: 0;
        right: 0;
        background-color: #fafafa;
        padding: 10px;
        padding-right:15px;
        min-height: 95%;
        max-height: 100%;
        width: 40%;
        margin: auto;
        overflow-y: auto;
        border-radius: 2px;
        will-change: top, opacity;
        margin-top: -5%;
    }

    input:required {
        border: 1px solid gray;
        border-bottom: 2px solid gray;
    }
   
</style>

<script>
    $(document).ready(function () {
        $('.collapsible').collapsible({
            accordion: false // A setting that changes the collapsible behavior to expandable instead of the default accordion style
        });

        $('#ProfileImage').error(function () {
            $(this).attr('src', '/images/user-48.png');
        });

        $('.modal-edit').leanModal({
            dismissible: true, // Modal can be dismissed by clicking outside of the modal
            opacity: .5, // Opacity of modal background
            in_duration: 300, // Transition in duration
            out_duration: 200, // Transition out duration
            starting_top: '4%', // Starting top style attribute
            ending_top: '10%', // Ending top style attribute
            //ready: function () { alert('Ready'); }, // Callback for Modal open
            //complete: function () { alert('Closed'); } // Callback for Modal close
        });

        //update customer
        $('form[name=update-customer]').validate({
            submitHandler: function (form) {
                $.ajax({
                    url: form.action,
                    data: $(form).serialize(),
                    type: form.method
                }).done(function (data) {
                    if (data.Message) {
                        swal('success', 'successfully updated customer details', "success");
                        $(location).attr('href', '/Customer/FindCustomer?searchString=' + $('input[name=AccountNo]').val());

                    }

                    if (data.error) {
                        swal('error', 'unable to customer details', "error");
                    }
                })
            }
        })

    });


</script>
